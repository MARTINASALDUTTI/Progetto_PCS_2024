#ifndef __UCD_test_HPP__
#define __UCD_test_HPP__

#include "UCDUtilities.hpp"
#include <gtest/gtest.h>

// ***************************************************************************
TEST(TestUCDUtilities, UCDUtilities_Test0Ds)
{
    const std::string exportFolder = "./";

    /*
    Eigen::MatrixXd points(3, 8);
    points.col(0) << 0.8,   0,   0;
    points.col(1) << 1, 0, 0;
    points.col(2) << 1, 1, 0;
    points.col(3) << 0.8, 1, 0;
    points.col(4) << 0, 0.5, 0;
    points.col(5) << 0.8, 0.5, 0;
    points.col(6) << 0, 1, 0;
    points.col(7) << 0, 0, 0;
    */

    //Eigen::MatrixXd points(3, 5);
   // points.row(0) << 0.554138, 0.446922, 0.364069, 0.492678,  0.54693;
   // points.row(1) << 0.392492, 0.706373, 0.636022, 0.440621, 0.385409;
   // points.row(2) << 0.574938, 0.261045, 0.498147, 0.597042, 0.597042;

    /*
    Eigen::MatrixXd points(3, 1);
    points.row(0) << 0.436999;
    points.row(1) << 0.735424 ;
    points.row(2) << 0.231993;
*/

    /*
    Eigen::MatrixXd points(3, 8);
    points << 0.679497, 0.422841, 0.554138, 0.209594, 0.160363, 0.492678, 0.54693, 0.0770272,
        0.515669, 0.77687, 0.392492, 0.993894, 0.945519, 0.440621, 0.385409, 0.863634,
        0.190545, 0.190545, 0.574938, 0.190545, 0.341506, 0.597042, 0.597042, 0.597042;
    */

    /*
    Eigen::Matrix<double, 3, 35> points;
    points << 0.679497, 0.422841, 0.436999, 0.594717, 0.407083, 0.436999, 0.422841, 0.329511, 0.364069, 0.160363,
        0.0770272, 0.492678, 0.364069, 0.329511, 0.594717, 0.450525, 0.446922, 0.554138, 0.446922, 0.450525,
        0.436999, 0.554138, 0.446922, 0.364069, 0.492678, 0.54693, 0.364069, 0.446922, 0.436999, 0.407083,
        0.209594, 0.160363, 0.247976, 0.241961, 0.235293,
        0.515669, 0.77687, 0.735424, 0.432365, 0.792907, 0.735424, 0.77687, 0.606678, 0.636022, 0.945519,
        0.863634, 0.440621, 0.636022, 0.606678, 0.432365, 0.709432, 0.706373, 0.392492, 0.706373, 0.709432,
        0.735424, 0.392492, 0.706373, 0.636022, 0.440621, 0.385409, 0.636022, 0.706373, 0.735424, 0.792907,
        0.993894, 0.945519, 0.689657, 0.821544, 0.967739,
        0.190545, 0.190545, 0.231993, 0.450509, 0.190545, 0.231993, 0.190545, 0.597042, 0.498147, 0.341506,
        0.597042, 0.597042, 0.498147, 0.597042, 0.450509, 0.250734, 0.261045, 0.574938, 0.261045, 0.250734,
        0.231993, 0.574938, 0.261045, 0.498147, 0.597042, 0.597042, 0.498147, 0.261045, 0.231993, 0.190545,
        0.190545, 0.341506, 0.597042, 0.404251, 0.190545;
*/
    Eigen::Matrix<double, 5, 3> new_points;
    new_points << 0.479352, 0.719358, 0.190545,
        0.433893, 0.744516, 0.2229,
        0.431609, 0.74578, 0.224526,
        0.0, 0.0, 0.0,
        0.240595, 0.851491, 0.360475;


    Gedim::UCDUtilities exporter;

    exporter.ExportPoints(exportFolder + "newCell0Ds.inp",
                          new_points);

}
// ***************************************************************************

TEST(TestUCDUtilities, UCDUtilities_Test1Ds)
{
    const std::string exportFolder = "./";

    Gedim::UCDUtilities exporter;


    /*
    Eigen::MatrixXd points(3, 8);
    points.col(0) << 0.8,   0,   0;
    points.col(1) << 1, 0, 0;
    points.col(2) << 1, 1, 0;
    points.col(3) << 0.8, 1, 0;
    points.col(4) << 0, 0.5, 0;
    points.col(5) << 0.8, 0.5, 0;
    points.col(6) << 0, 1, 0;
    points.col(7) << 0, 0, 0;

    Eigen::MatrixXi edges(2, 11);
    edges.col(0) << 0, 3;
    edges.col(1) << 1, 0;
    edges.col(2) << 2, 1;
    edges.col(3) << 3, 2;
    edges.col(4) << 4, 6;
    edges.col(5) << 5, 4;
    edges.col(6) << 3, 5;
    edges.col(7) << 6, 3;
    edges.col(8) << 7, 4;
    edges.col(9) << 0, 7;
    edges.col(10) << 5, 0;

    Eigen::MatrixXd points(3, 8);
    points << 0.679497, 0.422841, 0.554138, 0.209594, 0.160363, 0.492678, 0.54693, 0.0770272,
        0.515669, 0.77687, 0.392492, 0.993894, 0.945519, 0.440621, 0.385409, 0.863634,
        0.190545, 0.190545, 0.574938, 0.190545, 0.341506, 0.597042, 0.597042, 0.597042;



    Eigen::MatrixXi edges(2, 10);
    edges.col(0) << 0, 0;
    edges.col(1) << 1, 0;
    edges.col(2) << 2, 1;
    edges.col(3) << 2, 4;
    edges.col(4) << 1, 3;
    edges.col(5) << 3, 4;
    edges.col(6) << 4, 5;
    edges.col(7) << 5, 6;
    edges.col(8) << 7, 4;
    edges.col(9) << 5, 5;
    //edges.col(10) << 8, 4;
*/

    /*
    Eigen::MatrixXd points(3, 20);
    points.row(0) << 6.7949650570084286e-01, 2.0959413133064569e-01, 7.7027229455623514e-02, 5.4692960382582068e-01, 0.554138, 0.422841, 0.160363,  0.424368, 0.407083,  0.589994, 0.329511, 0.449954, 0.479352, 0.322542, 0.247976, 0.238807,0.4272,0.425099, 0.479352, 0.322542;
    points.row(1) << 5.1566886122886846e-01, 9.9389350435296486e-01, 8.6363358811981283e-01, 3.8540894499571632e-01, 0.392492, 0.77687,  0.945519, 0.544407, 0.792907,  0.441441, 0.606678, 0.708947, 0.719358, 0.80614, 0.689657, 0.890697,0.507259, 0.510615, 0.719358, 0.80614;
    points.row(2) << 1.9054542365205804e-01, 1.9054542365205804e-01, 5.9704177318758545e-01, 5.9704177318758545e-01, 0.574938, 0.190545,  0.341506, 0.544514, 0.190545,  0.443965, 0.597042, 0.252369, 0.190545, 0.302152, 0.597042, 0.303164,0.597042, 0.595174, 0.190545, 0.302152;

    Eigen::MatrixXi edges(2,12);
    edges.col(0) << 0, 1;
    edges.col(1) << 1, 2;
    edges.col(2) << 2, 3;
    edges.col(3) << 3, 0;
    edges.col(4) << 4, 5;
    edges.col(5) << 6, 7;
    edges.col(6) << 8, 9;
    edges.col(7) << 10, 11;
    edges.col(8) << 12, 13;
    edges.col(9) << 14, 15;
    edges.col(10) << 16, 17;
    edges.col(11) << 18, 19;

    exporter.ExportSegments(exportFolder + "Trace.inp",
                            points,
                            edges);
*/

    Eigen::MatrixXd points(3, 4);
    points.row(0) << 0.4272,0.425099, 0.479352, 0.322542;
points.row(1) << 0.507259, 0.510615, 0.719358, 0.80614;
    points.row(2) << 0.597042, 0.595174, 0.190545, 0.302152;

Eigen::MatrixXi edges(2,1);
edges.col(0) << 0, 1;
//edges.col(1) << 3, 2;


exporter.ExportSegments(exportFolder + "newTrace.inp",
                        points,
                        edges);

    /*
    Eigen::Matrix<double, 3, 12> subpoints;
    subpoints << 0.679497, 0.422841, 0.554138, 0.554138, 0.422841, 0.209594, 0.160363, 0.492678, 0.54693, 0.492678, 0.160363, 0.0770272,
        0.515669, 0.77687,  0.392492, 0.392492, 0.77687,  0.993894, 0.945519, 0.440621, 0.385409, 0.440621, 0.945519, 0.863634,
        0.190545, 0.190545, 0.574938, 0.574938, 0.190545, 0.190545, 0.341506, 0.597042, 0.597042, 0.597042, 0.341506, 0.597042;

    Eigen::MatrixXi subedges(2, 12);
    subedges.col(0) << 0, 1;
    subedges.col(1) << 1, 2;
    subedges.col(2) << 2, 0;
    subedges.col(3) << 3, 4;
    subedges.col(4) << 4, 5;
    subedges.col(5) << 5, 6;
    subedges.col(6) << 6, 7;
    subedges.col(7) << 7, 8;
    subedges.col(8) << 3, 8;
    subedges.col(9) << 9, 10;
    subedges.col(10) << 10, 11;
    subedges.col(11) << 9, 11;


    exporter.ExportSegments(exportFolder + "Cell1Ds.inp",
                            subpoints,
                            subedges);
*/

}
// ***************************************************************************
TEST(TestUCDUtilities, UCDUtilities_Test2Ds)
{
    const std::string exportFolder = "./";

    Gedim::UCDUtilities exporter;

    Eigen::MatrixXd points(3, 8);
    points.col(0) << 0.8,   0,   0;
    points.col(1) << 1, 0, 0;
    points.col(2) << 1, 1, 0;
    points.col(3) << 0.8, 1, 0;
    points.col(4) << 0, 0.5, 0;
    points.col(5) << 0.8, 0.5, 0;
    points.col(6) << 0, 1, 0;
    points.col(7) << 0, 0, 0;

    std::vector<std::vector<unsigned int>> polygons_vertices = {{0, 1, 2, 3},
                                                                {4, 5, 3, 6},
                                                                {7, 0, 5, 4}};

    exporter.ExportPolygons(exportFolder + "Cell2Ds.inp",
                            points,
                            polygons_vertices);

}
// ***************************************************************************

#endif // __UCD_test_HPP__
